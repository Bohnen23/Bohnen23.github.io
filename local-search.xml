<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Mac 系统下 Hexo+Github Blog（2）更换主题 - instapaper、Omega、Fluid</title>
    <link href="/post/undefined.html"/>
    <url>/post/undefined.html</url>
    
    <content type="html"><![CDATA[<p>Blog 搭建完了，接下来就想把默认的「丑」主题 landscape 换了。google 「hexo themes」第一个链接：<a href="https://hexo.io/themes/index.html">https://hexo.io/themes/index.html</a> 找一个顺眼的主题，或搜索有哪些受欢迎的 hexo 主题。</p><p>简中世界推荐最多的是 Next 和 Butterfly，我都不喜欢，因为这两个主题的页面功能全面得太花哨。当然，很多功能如果不需要的话，可以设置 false 关掉，但对我来说还是有点儿繁琐，我想要一款整洁简单的。</p><h2 id="instapaper"><a href="#instapaper" class="headerlink" title="instapaper"></a>instapaper</h2><p>翻遍了主题列表，instapaper 最合我意。</p><p>编写者的 Demo 博客：<a href="https://techmovie.xyz/">https://techmovie.xyz</a></p><p>instapaper 的 Github 仓库：<a href="https://github.com/techmovie/hexo-theme-instapaper">https://github.com/techmovie/hexo-theme-instapaper</a></p><p>instapaper 的安装设置很简单，文件清晰明了，但这里的坑是：按照步骤操作完，hexo s 之后出现的 localhost：4000 报错如下：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">extends</span> <span class="hljs-keyword">includes</span><span class="hljs-regexp">/layout.pug block content include ./i</span>ncludes<span class="hljs-regexp">/mixins/</span>post-ui.pug #recent-posts.recent-posts +postUI <span class="hljs-keyword">include</span> <span class="hljs-keyword">includes</span>/pagination.pug<br></code></pre></td></tr></table></figure><p>解决方法：</p><p>Step 1，输入以下代码</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">sudo npm <span class="hljs-keyword">install </span>--save hexo-renderer-<span class="hljs-keyword">jade </span>hexo-generator-feed hexo-generator-sitemap hexo-<span class="hljs-keyword">browsersync </span>hexo-generator-archive<br></code></pre></td></tr></table></figure><p>Step 2，以上运行后</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">hexo</span> clean<br><br>hexo g --<span class="hljs-literal">debug</span><br><br>hexo s<br></code></pre></td></tr></table></figure><p>安装这个主题的第二个坑，如果第一篇文章的题目是中文，会报错。这篇文章后写的，报错页面找不到了，解决办法是，复制报错页面内容，搜索，能找到需要安装 hexo 的什么插件。</p><p>instapaper 这个主题功能少，编写者没有加入必要插件，需要自己手动解决，这两个坑填好后，hexo d 就能看到主题已更换成功。</p><p>instapaper 主题的优点也正是其缺点，过于简洁，缺很多对我来说的必要功能，比如搜索、分类、关于。文章数量少时还可以，多了以后就不便利了，因此，这个主题可以当第一个主题更换的练手，不用调试太多，很快成功。</p><h2 id="Omega"><a href="#Omega" class="headerlink" title="Omega"></a>Omega</h2><p>编写者的 Demo 博客：<a href="https://www.kavience.com/">https://www.kavience.com</a></p><p>Github：<a href="https://github.com/kavience/hexo-theme-omega">https://github.com/kavience/hexo-theme-omega</a></p><p>这个编者的博客做得很好，功能齐全，而且正正好全是我需要的，没有任何多余功能。但缺点很大，就是安装文档写得很含混，要点一下带过，没有细说。看编者的文章内容也是这个风格，说了不少生活上，心理上的事，是一个感情丰富的程序员创业者，可在需要认真探究的点上，含混而过。</p><p>我连猜带蒙地搞定了，可调试不好，文章下的信息显示也不分行，糊在一起；还有个大问题是，因为不知道缺什么插件，我把编者列的全安装了，结果速度巨慢，再怎么好看也果断删除，编者的博客用了很多大幅莱奥那多的头像，Omega 这个主题真是，好像小李给我的感觉，翩翩美少男一枚，话说得好听，眼神魅惑，却完全不能指望他干实事，只能忍痛割爱地断了联系。</p><p>不过，Omega 编者博客的置顶信息不错，我就是从其中的免费清晰图库里下载的图片用在下一个主题上。置顶博客内容可以保存下来。</p><h2 id="Fluid"><a href="#Fluid" class="headerlink" title="Fluid"></a>Fluid</h2><p>编写者的 Demo 博客：<a href="https://zkqiang.cn/">https://zkqiang.cn</a></p><p>Github：<a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>Fluid 这个主题是我在 Windows 上选用的，当时三脚猫水平，稀里糊涂地改成功了，进一步的设置怎么调都不变，如果几个页面的图片都换成我喜欢的，这个主题堪称完美，有我需要的全部功能，也是不多不少正正好。</p><p>这次 Mac 上踩的坑是，Fluid 这款主题没有 Blog&#x2F;themes，也就没有 themes 下的 _config.fluid.yml </p><p>于是，我自作聪明地复制了一个 themes，之后就无法运行，只好又删了，重新来。原来内容都在 public 里面，而 _config.fluid.yml 需要自己建一个，把 Blog 里面那个根文件 _config.yml 复制以后再改名为 _config.fluid.yml，再把编者里面的内容复制过去。</p><p>再仔细阅读编者写的手册，修改几个页面图片最好的方法是，先把想要的图上传到图床，然后修改 _config.fluid.yml，把图片的 http 地址放上去，这样博客上传打开速度就不受影响了。</p><p>Fluid 主题编者团队人数很多，也一直在优化，因此坑不多，且对照手册都能解决，文件包简洁，插件齐全，完全不用再手动添加什么了。</p><p>编者的博客也是个宝藏，比如有一个微信公众号的 Markdown 文档，有空翻一翻，挖一挖，也能全面了解 Fluid 主题里的更多功能。</p><p>Fluid 是我最满意的一个主题。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>instapaper 主题简单好上手，缺点是功能少，需要手动添加插件。</p><p>Omega 主题功能适当，缺点是编者文档写得不清楚，让人难以复现。编者博客置顶文章信息丰富，可保存使用。</p><p>Fluid 主题功能适当，功能优化得十分完备，简约又不简单，优雅美观，文档和资料详实，可以使用并慢慢学习，解锁新功能。</p><p>自己制作一个主题的工作量目前对我来说难度很大，Fluid 又如此完备，先用着，以后水平提高了可以尝试做一个，当熟悉功能的练习，但肯定难以超越 Fluid，也许能加入工作小组，贡献一份力量。</p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>搭建Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mac 系统下 Hexo+Github Blog（1） 搭建博客 小白遇坑记录</title>
    <link href="/post/51e9c87.html"/>
    <url>/post/51e9c87.html</url>
    
    <content type="html"><![CDATA[<p>用 Mac 前，曾用 Windows 搭建过，不得不说，Mac 明显比 Windows 简单，步骤如下：</p><h2 id="创建本地环境"><a href="#创建本地环境" class="headerlink" title="创建本地环境"></a>创建本地环境</h2><h3 id="1、安装-Node-js"><a href="#1、安装-Node-js" class="headerlink" title="1、安装 Node.js"></a>1、安装 Node.js</h3><h3 id="2、安装-Git"><a href="#2、安装-Git" class="headerlink" title="2、安装 Git"></a>2、安装 Git</h3><p>这两个步骤不赘述，检验是否安装成功，命令如下：</p><p><code>node -v</code></p><p><code>git -v</code></p><p>分别显示版本信息，证明已经安装成功。</p><h3 id="3、安装-Hexo"><a href="#3、安装-Hexo" class="headerlink" title="3、安装 Hexo"></a>3、安装 Hexo</h3><p>打开 Mac 的 Terminal 页面（找不到的可以电脑搜索，或者 google 方法）</p><p>Step 1，在 Terminal 页面中输入如下命令：</p><p><code>sudo npm install hexo-cli -g</code></p><p><strong>这里有一个坑</strong></p><p>大多数引导用的命令是：</p><p><code>npm install hexo-cli -g</code></p><p>而我用这个一定报错，加上 sudo 就顺利完成。假如加 sudo 报错的话，就去掉试试。</p><p>Step 2，创建并初始化博客项目 —— Blog （这个名字可以换其他，比如 Myblog，那么下面 cd 后名字和这个要一致）</p><p><code>hexo init Blog</code></p><p>Step 3，切换到博客项目 —— Blog 中（如果上面取了 Myblog，这里就是 cd Myblog）</p><p><code>cd Blog</code></p><p>Step 4，安装</p><p><code>sudo npm install</code></p><p>跟上面一样，假如报错，就去掉 sudo</p><h3 id="4、本地预览"><a href="#4、本地预览" class="headerlink" title="4、本地预览"></a>4、本地预览</h3><p>生成静态网站，并在本地预览，命令如下：</p><p><code>hexo g --debug</code></p><p><code>hexo s</code></p><p>这时会生成一个网站 <a href="http://localhost:4000/">http://localhost:4000</a></p><p>打开后这个样子：</p><p><a href="https://imgse.com/i/pPiZV3j"><img src="https://s1.ax1x.com/2023/08/03/pPiZV3j.jpg" alt="pPiZV3j.jpg" border="0" /></a></p><h3 id="5、发文试试"><a href="#5、发文试试" class="headerlink" title="5、发文试试"></a>5、发文试试</h3><p>Step 1，新建一篇题目是「第一篇」的文章</p><p><code>hexo new 第一篇</code></p><p>Step 2，新建的文章默认放到 source&#x2F;_posts&#x2F; 之下，.md 格式。找到文档：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs subunit">title:  第一篇<br><br>date: 2023<span class="hljs-string">-07</span><span class="hljs-string">-28</span> 20:40:10<br><br><span class="hljs-keyword">tags:</span><br></code></pre></td></tr></table></figure><p>Step 3，编辑这个 md 文档，添加【## 第一次搭建 Blog，感到好茫然】</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs subunit">title:  第一篇<br><br>date: 2023<span class="hljs-string">-07</span><span class="hljs-string">-28</span> 20:40:10<br><br><span class="hljs-keyword">tags:</span><br><br>##（空格）第一次搭建 Blog，感到好茫然。<br></code></pre></td></tr></table></figure><p>Step 4，打开 <a href="http://localhost:4000/">http://localhost:4000</a> 查看</p><h2 id="搭建-Github-页面"><a href="#搭建-Github-页面" class="headerlink" title="搭建 Github 页面"></a>搭建 Github 页面</h2><p>Step 1，先注册一个 Github 账号</p><p>Step 2，登录 Github，创建一个仓库。具体方法不赘述，网上有很多解说，很简单。</p><p>最终创建一个名字「username.github.io」的仓库。</p><p>hexo 生成的本地静态网站推送至「username.github.io」仓库，方法如下：</p><p>Step 3，打开本地创建的 Blog 文件夹里的 _config.yml，加入以下命令：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">type:</span> git<br><span class="hljs-symbol"></span><br><span class="hljs-symbol">repo:</span> http:<span class="hljs-comment">//github.com/username/username.github.io.git</span><br><span class="hljs-symbol"></span><br><span class="hljs-symbol">branch:</span> master<br></code></pre></td></tr></table></figure><p><strong>注意：上面的 username 都要改成你的 Github 用户名和仓库名，以及上面命令 type repo branch 后必须加一个空格。</strong></p><p>Step 4，执行部署</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><p>这时报错</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">ERROR </span>Deployer not found: git<br></code></pre></td></tr></table></figure><p>就安装一个插件 hexo-deployer-git</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">sudo npm <span class="hljs-keyword">install</span> hexo-deployer-git -s<br></code></pre></td></tr></table></figure><p>继续</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><p>这步成功后，hexo 生成的本地静态网站就被推送到了 Github 搭建的仓库中，打开 <a href="http://username.github.io/">http://username.github.io</a> 查看。</p><p>至此，Hexo+Github 搭建 Blog 迈出成功第一步。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>完整代码：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm"><span class="hljs-comment">#显示版本信息，检验是否安装成功</span><br>node -v<br><br>git -v <br><br><span class="hljs-comment">#安装 Hexo</span><br>sudo npm <span class="hljs-keyword">install </span>hexo-cli -g<br><br>hexo init <span class="hljs-keyword">Blog</span><br><span class="hljs-keyword"></span>cd <span class="hljs-keyword">Blog</span><br><span class="hljs-keyword"></span><br>sudo npm <span class="hljs-keyword">install</span><br><span class="hljs-keyword"></span><br><span class="hljs-comment">#本地预览</span><br>hexo clean<br><br>hexo g --<span class="hljs-built_in">debug</span><br><br>hexo s<br><br>hexo d<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>搭建Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
